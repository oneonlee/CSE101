# -*- coding: utf-8 -*-
"""odd_even_sort.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1NMRV-98wgspaXrSt3deo0G98lSGdC9U1
"""

import numpy as np
import time
import matplotlib.pyplot as plt

def check_sort(arr, N):
  sorted = True

  for i in range(N-1):
    if arr[i] > arr[i+1]:
      sorted = False
    if sorted == False:
      break;
  
  return sorted

def odd_even_sort(arr, n):
  isSorted = False
  while isSorted == False:
    isSorted = True
    temp = 0

    print("odd index")
    for i in range(0, n-1, 2):
      if arr[i] > arr[i+1]:
        arr[i], arr[i+1] = arr[i+1], arr[i]
        isSorted = False
    print(arr)
              
    print("even index")
    for i in range(1, n-1, 2):
      if arr[i] > arr[i+1]:
        arr[i], arr[i+1] = arr[i+1], arr[i]
        isSorted = False
    print(arr)

  if check_sort(arr, n):
    print("\n최종 정렬 결과")
    print(arr, "\n")

  else:
    print("\n정렬 오류!!!")
    print(arr, "\n")

arr1 = [2, 10, 5, 3, 7, 9, 4, 10]
n1 = len(arr1)

arr2 = [2, 1, 5, 3, 7, 9, 4, 10]
n2 = len(arr2)

arr3 = [4, 13, 2, 5, 6, 70, 8, 3, 10, 11, 24, 23, 21, 7, 9, 12]
n3 = len(arr3)

odd_even_sort(arr1, n1)
odd_even_sort(arr2, n2)
odd_even_sort(arr3, n3)

time_list = []
N_list = [1000, 5000, 10000]
for N in N_list:
  arr = np.random.randint(low=0, high=1000, size=N) # 길이가 N개인 임의의 리스트를 생성
  start = time.time()
  odd_even_sort(arr, N)
  time_list.append(round(time.time() - start, 2))
  print(f"N = {N}일 때, 정렬 시간 : {time_list[-1]} sec")

plt.title("Comparison of time required by N value")
plt.plot(N_list, time_list, marker='o')
plt.show()

plt.title("Comparison of time required by N value")
x = np.arange(3)
plt.bar(x, time_list)
plt.xticks(x, N_list)
plt.show()